@using CustomEditingApp.Models
@model IEnumerable<Product>
@addTagHelper *, Kendo.Mvc


<!-- Navigation Control-->

<style>
    .navbar {
        overflow: hidden;
        background-color: #333;
    }

        .navbar a {
            float: left;
            display: block;
            color: white;
            text-align: center;
            padding: 14px 20px;
            text-decoration: none;
        }

            .navbar a:hover {
                background-color: #ddd;
                color: black;
            }

    .content {
        padding: 20px;
    }

    h2 {
        margin-top: 1rem;
    }
</style>
<div id="popupWindow" style="display:none;">
    <div id="popupContent"></div>
</div>
<script>
    $(document).ready(function () {
        isEditing = false;

        // Initialize Kendo UI Window
        var editWarningPopup = $("#editWarningPopup").kendoWindow({
            width: "400px",
            title: "Warning",
            visible: false,
            actions: ["Close"]
        }).data("kendoWindow");

        // Handle navbar link clicks
        $(".nav-link").on("click", function (e) {
            if (isEditing) {
                console.log("cleeeee");
                e.preventDefault();
                editWarningPopup.center().open();
            }
        });
    });
</script>
<div id="editWarningPopup" style="display:none;">
    <div id="editWarningContent">Finish the editing before switching.</div>
</div>
<div class="navbar">
    <a href="#" class="nav-link" data-modal-content="Not Init Yet.">Home</a>
    <a href="#" class="nav-link" data-modal-content="Not Init Yet.">Products</a>
    <a href="#" class="nav-link" data-modal-content="Not Init Yet.">About</a>
    <a href="#" class="nav-link" data-modal-content="Not Init Yet.">Contact</a>
</div>



<h2>Products</h2>

<kendo-grid name="grid" id="RadGrid1">
    <editable mode="incell" />
    <columns>
        
        <column field="ProductName" title="Product Name" />
        <column field="UnitPrice" title="Unit Price" />
        <column field="UnitsInStock" title="Units In Stock" />
        
    </columns>

    <datasource type="DataSourceTagHelperType.Ajax" batch="true">
        <transport>
            <read url="@Url.Action("ProductsRead", "Products")" />
            <create url="@Url.Action("AddProduct", "Products")" type="POST" content-type="application/json" />
            <update url="@Url.Action("UpdateProduct", "Products")" type="POST" content-type="application/json" />
        </transport>
        <schema data="Data">
            <model id="ProductID">
                <fields>
                    <field name="ProductID" type="number" editable="false" />
                    <field name="ProductName" type="string" />
                    <field name="UnitPrice" type="number" />
                    <field name="UnitsInStock" type="number" />
                </fields>
            </model>
        </schema>
    </datasource>
    <toolbar>
        <toolbar-button name="create"></toolbar-button>
    </toolbar>
    <groupable enabled="true" />
    <sortable enabled="true" />
    <filterable enabled="true" mode="row" />
    <search fields-extended="@(new object[]
                                        {new {Name = "ProductID", Operator = "eq"},
                                         new {Name = "ProductName", Operator = "contains"},
                                         new {Name = "UnitPrice", Operator = "contains"},
                                         new {Name = "UnitsInStock", Operator = "contains"}})">
    </search>
    <pageable button-count="5" refresh="true" page-sizes="new int[] { 5, 10, 20 }">
    </pageable>
    
</kendo-grid>

                

<h2>Products</h2>
<kendo-grid name="grid2" id="RadGrid2">
    <editable mode="popup" />
    <columns>
        
        <column field="ProductName" title="Product Name" />
        <column field="UnitPrice" title="Unit Price" />
        <column field="UnitsInStock" title="Units In Stock" />
        <column width="200">
            <commands>
                <column-command text="Edit" name="edit"></column-command>
            </commands>
        </column>
    </columns>
    <datasource type="DataSourceTagHelperType.Ajax" batch="true">
        <transport>
            <read url="@Url.Action("ProductsRead", "Products")" />
            <update url="@Url.Action("PopupUpdateProduct", "Products")" type="POST" content-type="application/json" />
            <create url="@Url.Action("PopupUpdateProduct", "Products")" />
        </transport>
        <schema data="Data">
            <model id="ProductID">
                <fields>
                    <field name="ProductID" type="number" editable="false" />
                    <field name="ProductName" type="string" />
                    <field name="UnitPrice" type="number" />
                    <field name="UnitsInStock" type="number" />
                </fields>
            </model>
        </schema>
    </datasource>
    <toolbar>
        <toolbar-button name="create"></toolbar-button>
    </toolbar>

    <groupable enabled="true" />
    <sortable enabled="true" />
    <filterable enabled="true" mode="row" />
    <search fields-extended="@(new object[]
                                        {new {Name = "ProductID", Operator = "eq"},
                                         new {Name = "ProductName", Operator = "contains"},
                                         new {Name = "UnitPrice", Operator = "contains"},
                                         new {Name = "UnitsInStock", Operator = "contains"}})">
    </search>
    <pageable button-count="5" refresh="true" page-sizes="new int[] { 5, 10, 20 }">
    </pageable>
    <columns>
        <column field="ProductName" title="Product Name" format="{0:MM/dd/yyyy}" width="200" />
        <column field="UnitPrice" title="Units Price" width="400" />
        <column field="UnitsInStock" title="Units In Stock" width="350" />
    </columns>

</kendo-grid>

<h2>Products</h2>
<kendo-grid name="grid3" id="RadGrid3" style="margin-top:5rem;">
    <editable mode="popup" />
    <columns>
        <column field="ProductID" title="Product ID" />
        <column field="ProductName" title="Product Name" />
        <column field="UnitPrice" title="Unit Price" />
        <column field="UnitsInStock" title="Units In Stock" />
        <column width="200">
            <commands>
                <column-command text="Edit" name="edit"></column-command>
            </commands>
        </column>
    </columns>
    <datasource type="DataSourceTagHelperType.Ajax" batch="true">
        <transport>
            <read url="@Url.Action("ProductsRead", "Products")" />
            <update url="@Url.Action("PopupUpdateProduct", "Products")" type="POST" content-type="application/json" />
        </transport>
        <schema data="Data">
            <model id="ProductID">
                <fields>
                    <field name="ProductID" type="number" editable="false" />
                    <field name="ProductName" type="string" />
                    <field name="UnitPrice" type="number" />
                    <field name="UnitsInStock" type="number" />
                </fields>
            </model>
        </schema>
    </datasource>
</kendo-grid>

<script>
    
    $(document).ready(function () {
        var grid = $("#RadGrid1").data("kendoGrid");
        var grid2 = $("#RadGrid2").data("kendoGrid");

        // Enable double-click to edit
        grid.tbody.on("dblclick", "td", function (e) {
            grid.editCell($(e.target));
        });

        // Automatically save the data when the cell is edited
        grid.bind("save", function (e) {
            setTimeout(function () {
                grid.dataSource.sync();
            });
            isEditing = false;
            console.log("Editing ended: ", isEditing);
        });

        // Handle errors
        grid.bind("error", function (e) {
            alert("An error occurred: " + e.errors);
        });

        grid.bind("edit", function (e) {
            isEditing = true;
            console.log("Editing started: ", isEditing);
        });

        grid.bind("cancel", function (e) {
            isEditing = false;
            console.log("Editing cancelded: ", isEditing);
        });
        grid2.bind("cancel", function (e) {
            isEditing = false;
            console.log("Editing cancelded: ", isEditing);
        });
        grid2.bind("edit", function (e) {
            isEditing = true;
            console.log("Editing started: ", isEditing);
        });
    });
</script>